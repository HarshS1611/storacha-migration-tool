"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/migrate";
exports.ids = ["pages/api/migrate"];
exports.modules = {

/***/ "@aws-sdk/client-s3":
/*!*************************************!*\
  !*** external "@aws-sdk/client-s3" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("@aws-sdk/client-s3");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "@web3-storage/upload-client":
/*!**********************************************!*\
  !*** external "@web3-storage/upload-client" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = import("@web3-storage/upload-client");;

/***/ }),

/***/ "@web3-storage/upload-client/fetch-with-upload-progress":
/*!*************************************************************************!*\
  !*** external "@web3-storage/upload-client/fetch-with-upload-progress" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = import("@web3-storage/upload-client/fetch-with-upload-progress");;

/***/ }),

/***/ "@web3-storage/w3up-client":
/*!********************************************!*\
  !*** external "@web3-storage/w3up-client" ***!
  \********************************************/
/***/ ((module) => {

module.exports = import("@web3-storage/w3up-client");;

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmigrate&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cmigrate.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmigrate&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cmigrate.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_migrate_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\migrate.ts */ \"(api)/./src/pages/api/migrate.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_migrate_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_migrate_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_migrate_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_migrate_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/migrate\",\n        pathname: \"/api/migrate\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_migrate_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRm1pZ3JhdGUmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlNUNwYWdlcyU1Q2FwaSU1Q21pZ3JhdGUudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDMEQ7QUFDMUQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHNEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxzREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdG9yYWNoYS1taWdyYXRpb24tdWkvP2NlYzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3NyY1xcXFxwYWdlc1xcXFxhcGlcXFxcbWlncmF0ZS50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL21pZ3JhdGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9taWdyYXRlXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmigrate&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cmigrate.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/managers/EventManager.js":
/*!**************************************!*\
  !*** ./src/managers/EventManager.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventManager: () => (/* binding */ EventManager),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_BrowserEventManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserEventManager */ \"(api)/./src/utils/BrowserEventManager.ts\");\n/**\r\n * Mock EventManager to replace the Node.js-dependent one from the library\r\n * This file is imported by the library instead of the original EventManager.js\r\n */ \n// Export the browser-compatible EventManager as the default export\nconst EventManager = _utils_BrowserEventManager__WEBPACK_IMPORTED_MODULE_0__.BrowserEventManager;\n// Also export it as default for ESM imports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_utils_BrowserEventManager__WEBPACK_IMPORTED_MODULE_0__.BrowserEventManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbWFuYWdlcnMvRXZlbnRNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Q0FHQyxHQUVrRTtBQUVuRSxtRUFBbUU7QUFDNUQsTUFBTUMsZUFBZUQsMkVBQW1CQSxDQUFDO0FBRWhELDRDQUE0QztBQUM1QyxpRUFBZUEsMkVBQW1CQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RvcmFjaGEtbWlncmF0aW9uLXVpLy4vc3JjL21hbmFnZXJzL0V2ZW50TWFuYWdlci5qcz8zMzYyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBNb2NrIEV2ZW50TWFuYWdlciB0byByZXBsYWNlIHRoZSBOb2RlLmpzLWRlcGVuZGVudCBvbmUgZnJvbSB0aGUgbGlicmFyeVxyXG4gKiBUaGlzIGZpbGUgaXMgaW1wb3J0ZWQgYnkgdGhlIGxpYnJhcnkgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgRXZlbnRNYW5hZ2VyLmpzXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgQnJvd3NlckV2ZW50TWFuYWdlciB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJFdmVudE1hbmFnZXInO1xyXG5cclxuLy8gRXhwb3J0IHRoZSBicm93c2VyLWNvbXBhdGlibGUgRXZlbnRNYW5hZ2VyIGFzIHRoZSBkZWZhdWx0IGV4cG9ydFxyXG5leHBvcnQgY29uc3QgRXZlbnRNYW5hZ2VyID0gQnJvd3NlckV2ZW50TWFuYWdlcjtcclxuXHJcbi8vIEFsc28gZXhwb3J0IGl0IGFzIGRlZmF1bHQgZm9yIEVTTSBpbXBvcnRzXHJcbmV4cG9ydCBkZWZhdWx0IEJyb3dzZXJFdmVudE1hbmFnZXI7ICJdLCJuYW1lcyI6WyJCcm93c2VyRXZlbnRNYW5hZ2VyIiwiRXZlbnRNYW5hZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/managers/EventManager.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/migrate.ts":
/*!**********************************!*\
  !*** ./src/pages/api/migrate.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var storacha_migration_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! storacha-migration-tool */ \"(api)/../../dist/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([storacha_migration_tool__WEBPACK_IMPORTED_MODULE_0__]);\nstoracha_migration_tool__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// This handler runs on the server side, where Node.js modules are available\nasync function handler(req, res) {\n    // Only allow POST requests\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { action, s3Config, pathKey, isDirectory, storachaConfig } = req.body;\n        if (!s3Config || !pathKey || !storachaConfig) {\n            return res.status(400).json({\n                error: \"Missing required parameters\"\n            });\n        }\n        // Create StorachaMigrator instance\n        const migrator = new storacha_migration_tool__WEBPACK_IMPORTED_MODULE_0__.StorachaMigrator({\n            s3: {\n                region: s3Config.region,\n                bucketName: s3Config.bucketName,\n                credentials: {\n                    accessKeyId: s3Config.credentials.accessKeyId,\n                    secretAccessKey: s3Config.credentials.secretAccessKey\n                }\n            },\n            storacha: {\n                email: storachaConfig.email\n            },\n            retry: {\n                maxAttempts: 3,\n                backoffMs: 1000,\n                maxBackoffMs: 10000\n            },\n            batch: {\n                concurrency: 3,\n                size: 5\n            }\n        });\n        // Initialize the migrator\n        await migrator.initialize();\n        // Perform migration based on the action\n        let result;\n        if (action === \"migrateFileToStoracha\") {\n            result = await migrator.migrateFile(pathKey);\n        } else if (action === \"migrateDirectoryToStoracha\") {\n            result = await migrator.migrateDirectory(pathKey);\n        } else {\n            return res.status(400).json({\n                error: \"Invalid action\"\n            });\n        }\n        // Handle the migration result\n        if (result.success) {\n            return res.status(200).json({\n                success: true,\n                cid: result.cid,\n                url: result.url,\n                size: result.size\n            });\n        } else {\n            return res.status(500).json({\n                success: false,\n                message: result.error || \"Migration failed\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Error in migrate API:\", error);\n        return res.status(500).json({\n            success: false,\n            message: error instanceof Error ? error.message : \"Unknown error\"\n        });\n    } finally{\n    // Clean up any resources if needed\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL21pZ3JhdGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDMkQ7QUFFM0QsNEVBQTRFO0FBQzdELGVBQWVDLFFBQVFDLEdBQW1CLEVBQUVDLEdBQW9CO0lBQzdFLDJCQUEyQjtJQUMzQixJQUFJRCxJQUFJRSxNQUFNLEtBQUssUUFBUTtRQUN6QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBcUI7SUFDNUQ7SUFFQSxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxXQUFXLEVBQUVDLGNBQWMsRUFBRSxHQUFHVixJQUFJVyxJQUFJO1FBRTNFLElBQUksQ0FBQ0osWUFBWSxDQUFDQyxXQUFXLENBQUNFLGdCQUFnQjtZQUM1QyxPQUFPVCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQThCO1FBQ3JFO1FBRUEsbUNBQW1DO1FBQ25DLE1BQU1PLFdBQVcsSUFBSWQscUVBQWdCQSxDQUFDO1lBQ3BDZSxJQUFJO2dCQUNGQyxRQUFRUCxTQUFTTyxNQUFNO2dCQUN2QkMsWUFBWVIsU0FBU1EsVUFBVTtnQkFDL0JDLGFBQWE7b0JBQ1hDLGFBQWFWLFNBQVNTLFdBQVcsQ0FBQ0MsV0FBVztvQkFDN0NDLGlCQUFpQlgsU0FBU1MsV0FBVyxDQUFDRSxlQUFlO2dCQUN2RDtZQUNGO1lBQ0FDLFVBQVU7Z0JBQ1JDLE9BQU9WLGVBQWVVLEtBQUs7WUFDN0I7WUFDQUMsT0FBTztnQkFDTEMsYUFBYTtnQkFDYkMsV0FBVztnQkFDWEMsY0FBYztZQUNoQjtZQUNBQyxPQUFPO2dCQUNMQyxhQUFhO2dCQUNiQyxNQUFNO1lBQ1I7UUFDRjtRQUVBLDBCQUEwQjtRQUMxQixNQUFNZixTQUFTZ0IsVUFBVTtRQUV6Qix3Q0FBd0M7UUFDeEMsSUFBSUM7UUFDSixJQUFJdkIsV0FBVyx5QkFBeUI7WUFDdEN1QixTQUFTLE1BQU1qQixTQUFTa0IsV0FBVyxDQUFDdEI7UUFDdEMsT0FBTyxJQUFJRixXQUFXLDhCQUE4QjtZQUNsRHVCLFNBQVMsTUFBTWpCLFNBQVNtQixnQkFBZ0IsQ0FBQ3ZCO1FBQzNDLE9BQU87WUFDTCxPQUFPUCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQWlCO1FBQ3hEO1FBRUEsOEJBQThCO1FBQzlCLElBQUl3QixPQUFPRyxPQUFPLEVBQUU7WUFDbEIsT0FBTy9CLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQzFCNEIsU0FBUztnQkFDVEMsS0FBS0osT0FBT0ksR0FBRztnQkFDZkMsS0FBS0wsT0FBT0ssR0FBRztnQkFDZlAsTUFBTUUsT0FBT0YsSUFBSTtZQUNuQjtRQUNGLE9BQU87WUFDTCxPQUFPMUIsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDMUI0QixTQUFTO2dCQUNURyxTQUFTTixPQUFPeEIsS0FBSyxJQUFJO1lBQzNCO1FBQ0Y7SUFDRixFQUFFLE9BQU9BLE9BQU87UUFDZCtCLFFBQVEvQixLQUFLLENBQUMseUJBQXlCQTtRQUN2QyxPQUFPSixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCNEIsU0FBUztZQUNURyxTQUFTOUIsaUJBQWlCZ0MsUUFBUWhDLE1BQU04QixPQUFPLEdBQUc7UUFDcEQ7SUFDRixTQUFVO0lBQ1IsbUNBQW1DO0lBQ3JDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdG9yYWNoYS1taWdyYXRpb24tdWkvLi9zcmMvcGFnZXMvYXBpL21pZ3JhdGUudHM/Y2QxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XHJcbmltcG9ydCB7IFN0b3JhY2hhTWlncmF0b3IgfSBmcm9tICdzdG9yYWNoYS1taWdyYXRpb24tdG9vbCc7XHJcblxyXG4vLyBUaGlzIGhhbmRsZXIgcnVucyBvbiB0aGUgc2VydmVyIHNpZGUsIHdoZXJlIE5vZGUuanMgbW9kdWxlcyBhcmUgYXZhaWxhYmxlXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxOiBOZXh0QXBpUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpIHtcclxuICAvLyBPbmx5IGFsbG93IFBPU1QgcmVxdWVzdHNcclxuICBpZiAocmVxLm1ldGhvZCAhPT0gJ1BPU1QnKSB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBlcnJvcjogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSk7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBhY3Rpb24sIHMzQ29uZmlnLCBwYXRoS2V5LCBpc0RpcmVjdG9yeSwgc3RvcmFjaGFDb25maWcgfSA9IHJlcS5ib2R5O1xyXG5cclxuICAgIGlmICghczNDb25maWcgfHwgIXBhdGhLZXkgfHwgIXN0b3JhY2hhQ29uZmlnKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXJzJyB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDcmVhdGUgU3RvcmFjaGFNaWdyYXRvciBpbnN0YW5jZVxyXG4gICAgY29uc3QgbWlncmF0b3IgPSBuZXcgU3RvcmFjaGFNaWdyYXRvcih7XHJcbiAgICAgIHMzOiB7XHJcbiAgICAgICAgcmVnaW9uOiBzM0NvbmZpZy5yZWdpb24sXHJcbiAgICAgICAgYnVja2V0TmFtZTogczNDb25maWcuYnVja2V0TmFtZSxcclxuICAgICAgICBjcmVkZW50aWFsczoge1xyXG4gICAgICAgICAgYWNjZXNzS2V5SWQ6IHMzQ29uZmlnLmNyZWRlbnRpYWxzLmFjY2Vzc0tleUlkLFxyXG4gICAgICAgICAgc2VjcmV0QWNjZXNzS2V5OiBzM0NvbmZpZy5jcmVkZW50aWFscy5zZWNyZXRBY2Nlc3NLZXlcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHN0b3JhY2hhOiB7XHJcbiAgICAgICAgZW1haWw6IHN0b3JhY2hhQ29uZmlnLmVtYWlsXHJcbiAgICAgIH0sXHJcbiAgICAgIHJldHJ5OiB7XHJcbiAgICAgICAgbWF4QXR0ZW1wdHM6IDMsXHJcbiAgICAgICAgYmFja29mZk1zOiAxMDAwLFxyXG4gICAgICAgIG1heEJhY2tvZmZNczogMTAwMDBcclxuICAgICAgfSxcclxuICAgICAgYmF0Y2g6IHtcclxuICAgICAgICBjb25jdXJyZW5jeTogMyxcclxuICAgICAgICBzaXplOiA1XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIEluaXRpYWxpemUgdGhlIG1pZ3JhdG9yXHJcbiAgICBhd2FpdCBtaWdyYXRvci5pbml0aWFsaXplKCk7XHJcblxyXG4gICAgLy8gUGVyZm9ybSBtaWdyYXRpb24gYmFzZWQgb24gdGhlIGFjdGlvblxyXG4gICAgbGV0IHJlc3VsdDtcclxuICAgIGlmIChhY3Rpb24gPT09ICdtaWdyYXRlRmlsZVRvU3RvcmFjaGEnKSB7XHJcbiAgICAgIHJlc3VsdCA9IGF3YWl0IG1pZ3JhdG9yLm1pZ3JhdGVGaWxlKHBhdGhLZXkpO1xyXG4gICAgfSBlbHNlIGlmIChhY3Rpb24gPT09ICdtaWdyYXRlRGlyZWN0b3J5VG9TdG9yYWNoYScpIHtcclxuICAgICAgcmVzdWx0ID0gYXdhaXQgbWlncmF0b3IubWlncmF0ZURpcmVjdG9yeShwYXRoS2V5KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnSW52YWxpZCBhY3Rpb24nIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEhhbmRsZSB0aGUgbWlncmF0aW9uIHJlc3VsdFxyXG4gICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICBjaWQ6IHJlc3VsdC5jaWQsXHJcbiAgICAgICAgdXJsOiByZXN1bHQudXJsLFxyXG4gICAgICAgIHNpemU6IHJlc3VsdC5zaXplXHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBtZXNzYWdlOiByZXN1bHQuZXJyb3IgfHwgJ01pZ3JhdGlvbiBmYWlsZWQnXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBtaWdyYXRlIEFQSTonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgbWVzc2FnZTogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcidcclxuICAgIH0pO1xyXG4gIH0gZmluYWxseSB7XHJcbiAgICAvLyBDbGVhbiB1cCBhbnkgcmVzb3VyY2VzIGlmIG5lZWRlZFxyXG4gIH1cclxufSAiXSwibmFtZXMiOlsiU3RvcmFjaGFNaWdyYXRvciIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJhY3Rpb24iLCJzM0NvbmZpZyIsInBhdGhLZXkiLCJpc0RpcmVjdG9yeSIsInN0b3JhY2hhQ29uZmlnIiwiYm9keSIsIm1pZ3JhdG9yIiwiczMiLCJyZWdpb24iLCJidWNrZXROYW1lIiwiY3JlZGVudGlhbHMiLCJhY2Nlc3NLZXlJZCIsInNlY3JldEFjY2Vzc0tleSIsInN0b3JhY2hhIiwiZW1haWwiLCJyZXRyeSIsIm1heEF0dGVtcHRzIiwiYmFja29mZk1zIiwibWF4QmFja29mZk1zIiwiYmF0Y2giLCJjb25jdXJyZW5jeSIsInNpemUiLCJpbml0aWFsaXplIiwicmVzdWx0IiwibWlncmF0ZUZpbGUiLCJtaWdyYXRlRGlyZWN0b3J5Iiwic3VjY2VzcyIsImNpZCIsInVybCIsIm1lc3NhZ2UiLCJjb25zb2xlIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/migrate.ts\n");

/***/ }),

/***/ "(api)/./src/utils/BrowserEventManager.ts":
/*!******************************************!*\
  !*** ./src/utils/BrowserEventManager.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserEventManager: () => (/* binding */ BrowserEventManager)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/**\r\n * Browser-compatible EventManager for the Storacha Migration Tool\r\n * This is a simplified version of the EventManager that works in the browser\r\n * without requiring Node.js fs module for logging\r\n */ \nclass BrowserEventManager extends events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter {\n    constructor(){\n        super();\n        this.startTime = new Date();\n        this.progress = {\n            status: \"preparing\",\n            phase: \"preparing\",\n            percentage: 0,\n            totalFiles: 0,\n            completedFiles: 0,\n            failedFiles: 0,\n            remainingFiles: 0,\n            elapsedTime: 0,\n            totalBytes: 0,\n            processedBytes: 0,\n            bytesUploaded: 0,\n            uploadedSize: \"0 B\",\n            downloadSpeed: 0,\n            uploadSpeed: 0,\n            estimatedTimeRemaining: \"Calculating...\",\n            downloadedBytes: 0,\n            totalDownloadBytes: 0,\n            uploadedBytes: 0,\n            totalUploadBytes: 0,\n            errors: []\n        };\n    }\n    onProgress(callback) {\n        this.progressCallback = callback;\n    }\n    onError(callback) {\n        this.errorCallback = callback;\n    }\n    updateProgress(update) {\n        this.progress = {\n            ...this.progress,\n            ...update\n        };\n        if (this.progressCallback) {\n            this.progressCallback(this.progress);\n        }\n    }\n    updateFileProgress(fileKey, bytesProcessed, totalBytes, phase) {\n        // Update progress based on phase\n        if (phase === \"download\") {\n            this.progress.downloadedBytes = bytesProcessed;\n            this.progress.totalDownloadBytes = totalBytes;\n        } else {\n            this.progress.uploadedBytes = bytesProcessed;\n            this.progress.totalUploadBytes = totalBytes;\n        }\n        this.updateProgress(this.progress);\n    }\n    updateUploadProgress(status) {\n        this.updateProgress({\n            uploadedBytes: status.loaded || 0,\n            totalUploadBytes: status.total || 0,\n            phase: status.phase,\n            currentShardIndex: status.shardIndex,\n            totalShards: status.totalShards,\n            currentFile: status.currentFile\n        });\n    }\n    // Custom override to make TypeScript happy with our event emitter\n    emit(eventName, ...args) {\n        if (eventName === \"error\" && this.errorCallback && args.length > 0) {\n            this.errorCallback(args[0], args[1]);\n        }\n        return super.emit(eventName, ...args);\n    }\n    close() {\n        // No file streams to close in browser\n        // Just remove all listeners to prevent memory leaks\n        this.removeAllListeners();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvQnJvd3NlckV2ZW50TWFuYWdlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztDQUlDLEdBRXFDO0FBRy9CLE1BQU1DLDRCQUE0QkQsZ0RBQVlBO0lBTW5ERSxhQUFjO1FBQ1osS0FBSztRQUNMLElBQUksQ0FBQ0MsU0FBUyxHQUFHLElBQUlDO1FBQ3JCLElBQUksQ0FBQ0MsUUFBUSxHQUFHO1lBQ2RDLFFBQVE7WUFDUkMsT0FBTztZQUNQQyxZQUFZO1lBQ1pDLFlBQVk7WUFDWkMsZ0JBQWdCO1lBQ2hCQyxhQUFhO1lBQ2JDLGdCQUFnQjtZQUNoQkMsYUFBYTtZQUNiQyxZQUFZO1lBQ1pDLGdCQUFnQjtZQUNoQkMsZUFBZTtZQUNmQyxjQUFjO1lBQ2RDLGVBQWU7WUFDZkMsYUFBYTtZQUNiQyx3QkFBd0I7WUFDeEJDLGlCQUFpQjtZQUNqQkMsb0JBQW9CO1lBQ3BCQyxlQUFlO1lBQ2ZDLGtCQUFrQjtZQUNsQkMsUUFBUSxFQUFFO1FBQ1o7SUFDRjtJQUVBQyxXQUFXQyxRQUF3RCxFQUFRO1FBQ3pFLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUdEO0lBQzFCO0lBRUFFLFFBQVFGLFFBQWtELEVBQVE7UUFDaEUsSUFBSSxDQUFDRyxhQUFhLEdBQUdIO0lBQ3ZCO0lBRUFJLGVBQWVDLE1BQWtDLEVBQVE7UUFDdkQsSUFBSSxDQUFDM0IsUUFBUSxHQUFHO1lBQUUsR0FBRyxJQUFJLENBQUNBLFFBQVE7WUFBRSxHQUFHMkIsTUFBTTtRQUFDO1FBQzlDLElBQUksSUFBSSxDQUFDSixnQkFBZ0IsRUFBRTtZQUN6QixJQUFJLENBQUNBLGdCQUFnQixDQUFDLElBQUksQ0FBQ3ZCLFFBQVE7UUFDckM7SUFDRjtJQUVBNEIsbUJBQW1CQyxPQUFlLEVBQUVDLGNBQXNCLEVBQUVyQixVQUFrQixFQUFFUCxLQUE0QixFQUFRO1FBQ2xILGlDQUFpQztRQUNqQyxJQUFJQSxVQUFVLFlBQVk7WUFDeEIsSUFBSSxDQUFDRixRQUFRLENBQUNnQixlQUFlLEdBQUdjO1lBQ2hDLElBQUksQ0FBQzlCLFFBQVEsQ0FBQ2lCLGtCQUFrQixHQUFHUjtRQUNyQyxPQUFPO1lBQ0wsSUFBSSxDQUFDVCxRQUFRLENBQUNrQixhQUFhLEdBQUdZO1lBQzlCLElBQUksQ0FBQzlCLFFBQVEsQ0FBQ21CLGdCQUFnQixHQUFHVjtRQUNuQztRQUVBLElBQUksQ0FBQ2lCLGNBQWMsQ0FBQyxJQUFJLENBQUMxQixRQUFRO0lBQ25DO0lBRUErQixxQkFBcUI5QixNQU9wQixFQUFRO1FBQ1AsSUFBSSxDQUFDeUIsY0FBYyxDQUFDO1lBQ2xCUixlQUFlakIsT0FBTytCLE1BQU0sSUFBSTtZQUNoQ2Isa0JBQWtCbEIsT0FBT2dDLEtBQUssSUFBSTtZQUNsQy9CLE9BQU9ELE9BQU9DLEtBQUs7WUFDbkJnQyxtQkFBbUJqQyxPQUFPa0MsVUFBVTtZQUNwQ0MsYUFBYW5DLE9BQU9tQyxXQUFXO1lBQy9CQyxhQUFhcEMsT0FBT29DLFdBQVc7UUFDakM7SUFDRjtJQUVBLGtFQUFrRTtJQUN6REMsS0FBS0MsU0FBMEIsRUFBRSxHQUFHQyxJQUFXLEVBQVc7UUFDakUsSUFBSUQsY0FBYyxXQUFXLElBQUksQ0FBQ2QsYUFBYSxJQUFJZSxLQUFLQyxNQUFNLEdBQUcsR0FBRztZQUNsRSxJQUFJLENBQUNoQixhQUFhLENBQUNlLElBQUksQ0FBQyxFQUFFLEVBQUVBLElBQUksQ0FBQyxFQUFFO1FBQ3JDO1FBQ0EsT0FBTyxLQUFLLENBQUNGLEtBQUtDLGNBQWNDO0lBQ2xDO0lBRUFFLFFBQWM7UUFDWixzQ0FBc0M7UUFDdEMsb0RBQW9EO1FBQ3BELElBQUksQ0FBQ0Msa0JBQWtCO0lBQ3pCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdG9yYWNoYS1taWdyYXRpb24tdWkvLi9zcmMvdXRpbHMvQnJvd3NlckV2ZW50TWFuYWdlci50cz83NGQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBCcm93c2VyLWNvbXBhdGlibGUgRXZlbnRNYW5hZ2VyIGZvciB0aGUgU3RvcmFjaGEgTWlncmF0aW9uIFRvb2xcclxuICogVGhpcyBpcyBhIHNpbXBsaWZpZWQgdmVyc2lvbiBvZiB0aGUgRXZlbnRNYW5hZ2VyIHRoYXQgd29ya3MgaW4gdGhlIGJyb3dzZXJcclxuICogd2l0aG91dCByZXF1aXJpbmcgTm9kZS5qcyBmcyBtb2R1bGUgZm9yIGxvZ2dpbmdcclxuICovXHJcblxyXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdldmVudHMnO1xyXG5pbXBvcnQgdHlwZSB7IE1pZ3JhdGlvblByb2dyZXNzIH0gZnJvbSAnc3RvcmFjaGEtbWlncmF0aW9uLXRvb2wnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEJyb3dzZXJFdmVudE1hbmFnZXIgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xyXG4gIHByaXZhdGUgcHJvZ3Jlc3M6IFBhcnRpYWw8TWlncmF0aW9uUHJvZ3Jlc3M+O1xyXG4gIHByaXZhdGUgcHJvZ3Jlc3NDYWxsYmFjaz86IChwcm9ncmVzczogUGFydGlhbDxNaWdyYXRpb25Qcm9ncmVzcz4pID0+IHZvaWQ7XHJcbiAgcHJpdmF0ZSBlcnJvckNhbGxiYWNrPzogKGVycm9yOiBFcnJvciwgZmlsZUtleT86IHN0cmluZykgPT4gdm9pZDtcclxuICBwcml2YXRlIHN0YXJ0VGltZTogRGF0ZTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5zdGFydFRpbWUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgdGhpcy5wcm9ncmVzcyA9IHtcclxuICAgICAgc3RhdHVzOiAncHJlcGFyaW5nJyxcclxuICAgICAgcGhhc2U6ICdwcmVwYXJpbmcnLFxyXG4gICAgICBwZXJjZW50YWdlOiAwLFxyXG4gICAgICB0b3RhbEZpbGVzOiAwLFxyXG4gICAgICBjb21wbGV0ZWRGaWxlczogMCxcclxuICAgICAgZmFpbGVkRmlsZXM6IDAsXHJcbiAgICAgIHJlbWFpbmluZ0ZpbGVzOiAwLFxyXG4gICAgICBlbGFwc2VkVGltZTogMCxcclxuICAgICAgdG90YWxCeXRlczogMCxcclxuICAgICAgcHJvY2Vzc2VkQnl0ZXM6IDAsXHJcbiAgICAgIGJ5dGVzVXBsb2FkZWQ6IDAsXHJcbiAgICAgIHVwbG9hZGVkU2l6ZTogJzAgQicsXHJcbiAgICAgIGRvd25sb2FkU3BlZWQ6IDAsXHJcbiAgICAgIHVwbG9hZFNwZWVkOiAwLFxyXG4gICAgICBlc3RpbWF0ZWRUaW1lUmVtYWluaW5nOiAnQ2FsY3VsYXRpbmcuLi4nLFxyXG4gICAgICBkb3dubG9hZGVkQnl0ZXM6IDAsXHJcbiAgICAgIHRvdGFsRG93bmxvYWRCeXRlczogMCxcclxuICAgICAgdXBsb2FkZWRCeXRlczogMCxcclxuICAgICAgdG90YWxVcGxvYWRCeXRlczogMCxcclxuICAgICAgZXJyb3JzOiBbXVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIG9uUHJvZ3Jlc3MoY2FsbGJhY2s6IChwcm9ncmVzczogUGFydGlhbDxNaWdyYXRpb25Qcm9ncmVzcz4pID0+IHZvaWQpOiB2b2lkIHtcclxuICAgIHRoaXMucHJvZ3Jlc3NDYWxsYmFjayA9IGNhbGxiYWNrO1xyXG4gIH1cclxuXHJcbiAgb25FcnJvcihjYWxsYmFjazogKGVycm9yOiBFcnJvciwgZmlsZUtleT86IHN0cmluZykgPT4gdm9pZCk6IHZvaWQge1xyXG4gICAgdGhpcy5lcnJvckNhbGxiYWNrID0gY2FsbGJhY2s7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVQcm9ncmVzcyh1cGRhdGU6IFBhcnRpYWw8TWlncmF0aW9uUHJvZ3Jlc3M+KTogdm9pZCB7XHJcbiAgICB0aGlzLnByb2dyZXNzID0geyAuLi50aGlzLnByb2dyZXNzLCAuLi51cGRhdGUgfTtcclxuICAgIGlmICh0aGlzLnByb2dyZXNzQ2FsbGJhY2spIHtcclxuICAgICAgdGhpcy5wcm9ncmVzc0NhbGxiYWNrKHRoaXMucHJvZ3Jlc3MpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdXBkYXRlRmlsZVByb2dyZXNzKGZpbGVLZXk6IHN0cmluZywgYnl0ZXNQcm9jZXNzZWQ6IG51bWJlciwgdG90YWxCeXRlczogbnVtYmVyLCBwaGFzZTogJ2Rvd25sb2FkJyB8ICd1cGxvYWQnKTogdm9pZCB7XHJcbiAgICAvLyBVcGRhdGUgcHJvZ3Jlc3MgYmFzZWQgb24gcGhhc2VcclxuICAgIGlmIChwaGFzZSA9PT0gJ2Rvd25sb2FkJykge1xyXG4gICAgICB0aGlzLnByb2dyZXNzLmRvd25sb2FkZWRCeXRlcyA9IGJ5dGVzUHJvY2Vzc2VkO1xyXG4gICAgICB0aGlzLnByb2dyZXNzLnRvdGFsRG93bmxvYWRCeXRlcyA9IHRvdGFsQnl0ZXM7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnByb2dyZXNzLnVwbG9hZGVkQnl0ZXMgPSBieXRlc1Byb2Nlc3NlZDtcclxuICAgICAgdGhpcy5wcm9ncmVzcy50b3RhbFVwbG9hZEJ5dGVzID0gdG90YWxCeXRlcztcclxuICAgIH1cclxuICAgIFxyXG4gICAgdGhpcy51cGRhdGVQcm9ncmVzcyh0aGlzLnByb2dyZXNzKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZVVwbG9hZFByb2dyZXNzKHN0YXR1czoge1xyXG4gICAgbG9hZGVkPzogbnVtYmVyO1xyXG4gICAgdG90YWw/OiBudW1iZXI7XHJcbiAgICBwaGFzZT86IHN0cmluZztcclxuICAgIHNoYXJkSW5kZXg/OiBudW1iZXI7XHJcbiAgICB0b3RhbFNoYXJkcz86IG51bWJlcjtcclxuICAgIGN1cnJlbnRGaWxlPzogc3RyaW5nO1xyXG4gIH0pOiB2b2lkIHtcclxuICAgIHRoaXMudXBkYXRlUHJvZ3Jlc3Moe1xyXG4gICAgICB1cGxvYWRlZEJ5dGVzOiBzdGF0dXMubG9hZGVkIHx8IDAsXHJcbiAgICAgIHRvdGFsVXBsb2FkQnl0ZXM6IHN0YXR1cy50b3RhbCB8fCAwLFxyXG4gICAgICBwaGFzZTogc3RhdHVzLnBoYXNlIGFzIGFueSxcclxuICAgICAgY3VycmVudFNoYXJkSW5kZXg6IHN0YXR1cy5zaGFyZEluZGV4LFxyXG4gICAgICB0b3RhbFNoYXJkczogc3RhdHVzLnRvdGFsU2hhcmRzLFxyXG4gICAgICBjdXJyZW50RmlsZTogc3RhdHVzLmN1cnJlbnRGaWxlXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8vIEN1c3RvbSBvdmVycmlkZSB0byBtYWtlIFR5cGVTY3JpcHQgaGFwcHkgd2l0aCBvdXIgZXZlbnQgZW1pdHRlclxyXG4gIG92ZXJyaWRlIGVtaXQoZXZlbnROYW1lOiBzdHJpbmcgfCBzeW1ib2wsIC4uLmFyZ3M6IGFueVtdKTogYm9vbGVhbiB7XHJcbiAgICBpZiAoZXZlbnROYW1lID09PSAnZXJyb3InICYmIHRoaXMuZXJyb3JDYWxsYmFjayAmJiBhcmdzLmxlbmd0aCA+IDApIHtcclxuICAgICAgdGhpcy5lcnJvckNhbGxiYWNrKGFyZ3NbMF0sIGFyZ3NbMV0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHN1cGVyLmVtaXQoZXZlbnROYW1lLCAuLi5hcmdzKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCk6IHZvaWQge1xyXG4gICAgLy8gTm8gZmlsZSBzdHJlYW1zIHRvIGNsb3NlIGluIGJyb3dzZXJcclxuICAgIC8vIEp1c3QgcmVtb3ZlIGFsbCBsaXN0ZW5lcnMgdG8gcHJldmVudCBtZW1vcnkgbGVha3NcclxuICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59ICJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJCcm93c2VyRXZlbnRNYW5hZ2VyIiwiY29uc3RydWN0b3IiLCJzdGFydFRpbWUiLCJEYXRlIiwicHJvZ3Jlc3MiLCJzdGF0dXMiLCJwaGFzZSIsInBlcmNlbnRhZ2UiLCJ0b3RhbEZpbGVzIiwiY29tcGxldGVkRmlsZXMiLCJmYWlsZWRGaWxlcyIsInJlbWFpbmluZ0ZpbGVzIiwiZWxhcHNlZFRpbWUiLCJ0b3RhbEJ5dGVzIiwicHJvY2Vzc2VkQnl0ZXMiLCJieXRlc1VwbG9hZGVkIiwidXBsb2FkZWRTaXplIiwiZG93bmxvYWRTcGVlZCIsInVwbG9hZFNwZWVkIiwiZXN0aW1hdGVkVGltZVJlbWFpbmluZyIsImRvd25sb2FkZWRCeXRlcyIsInRvdGFsRG93bmxvYWRCeXRlcyIsInVwbG9hZGVkQnl0ZXMiLCJ0b3RhbFVwbG9hZEJ5dGVzIiwiZXJyb3JzIiwib25Qcm9ncmVzcyIsImNhbGxiYWNrIiwicHJvZ3Jlc3NDYWxsYmFjayIsIm9uRXJyb3IiLCJlcnJvckNhbGxiYWNrIiwidXBkYXRlUHJvZ3Jlc3MiLCJ1cGRhdGUiLCJ1cGRhdGVGaWxlUHJvZ3Jlc3MiLCJmaWxlS2V5IiwiYnl0ZXNQcm9jZXNzZWQiLCJ1cGRhdGVVcGxvYWRQcm9ncmVzcyIsImxvYWRlZCIsInRvdGFsIiwiY3VycmVudFNoYXJkSW5kZXgiLCJzaGFyZEluZGV4IiwidG90YWxTaGFyZHMiLCJjdXJyZW50RmlsZSIsImVtaXQiLCJldmVudE5hbWUiLCJhcmdzIiwibGVuZ3RoIiwiY2xvc2UiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/utils/BrowserEventManager.ts\n");

/***/ }),

/***/ "(api)/../../dist/StorachaMigrator.js":
/*!**************************************!*\
  !*** ../../dist/StorachaMigrator.js ***!
  \**************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorachaMigrator: () => (/* binding */ StorachaMigrator)\n/* harmony export */ });\n/* harmony import */ var _managers_ConnectionManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./managers/ConnectionManager.js */ \"(api)/../../dist/managers/ConnectionManager.js\");\n/* harmony import */ var _managers_EventManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./managers/EventManager.js */ \"(api)/./src/managers/EventManager.js\");\n/* harmony import */ var _managers_RetryManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./managers/RetryManager.js */ \"(api)/../../dist/managers/RetryManager.js\");\n/* harmony import */ var _utils_DefaultLogger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/DefaultLogger.js */ \"(api)/../../dist/utils/DefaultLogger.js\");\n/* harmony import */ var _utils_nameGenerator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/nameGenerator.js */ \"(api)/../../dist/utils/nameGenerator.js\");\n/* harmony import */ var _services_s3Service_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./services/s3Service.js */ \"(api)/../../dist/services/s3Service.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_managers_ConnectionManager_js__WEBPACK_IMPORTED_MODULE_0__]);\n_managers_ConnectionManager_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\nclass StorachaMigrator {\n    constructor(config, options, logger) {\n        this.config = this.validateConfig(config);\n        this.migrationOptions = options;\n        this.logger = logger || new _utils_DefaultLogger_js__WEBPACK_IMPORTED_MODULE_3__.DefaultLogger();\n        this.connectionManager = new _managers_ConnectionManager_js__WEBPACK_IMPORTED_MODULE_0__.ConnectionManager(config);\n        this.eventManager = new _managers_EventManager_js__WEBPACK_IMPORTED_MODULE_1__.EventManager();\n        this.retryManager = new _managers_RetryManager_js__WEBPACK_IMPORTED_MODULE_2__.RetryManager(config.retry, this.logger);\n        this.s3Service = new _services_s3Service_js__WEBPACK_IMPORTED_MODULE_5__.S3Service(config.s3, this.eventManager);\n        // Set up callbacks if provided in options\n        if (options?.progressCallback) {\n            this.onProgress(options.progressCallback);\n        }\n        if (options?.errorCallback) {\n            this.onError(options.errorCallback);\n        }\n    }\n    async initialize() {\n        await this.connectionManager.initializeConnections();\n    }\n    async close() {\n        await this.connectionManager.closeConnections();\n        this.eventManager.close();\n    }\n    async migrateFile(fileKey) {\n        return await this.retryManager.withRetry(async () => {\n            this.logger.info(`🔄 Migrating file: ${fileKey}`);\n            const startTime = new Date();\n            this.eventManager.updateProgress({\n                phase: 'preparing',\n                status: 'preparing',\n                startTime,\n                currentFile: fileKey,\n                totalFiles: 1,\n                completedFiles: 0\n            });\n            const s3 = this.connectionManager.getS3Connection();\n            const storacha = this.connectionManager.getStorachaConnection();\n            this.eventManager.updateProgress({\n                phase: 'download',\n                status: 'downloading'\n            });\n            const fileData = await this.s3Service.fetchFileFromS3(fileKey);\n            this.eventManager.updateProgress({\n                phase: 'upload',\n                status: 'uploading'\n            });\n            const result = await storacha.uploadToStoracha(fileData.buffer, fileData.fileName);\n            const endTime = new Date();\n            this.eventManager.updateProgress({\n                status: result.success ? 'completed' : 'error',\n                endTime,\n                completedFiles: 1,\n                percentage: 100\n            });\n            this.eventManager.emit(\"fileComplete\", fileKey, result);\n            return result;\n        }, `migrate file ${fileKey}`);\n    }\n    async migrateDirectory(directoryPath) {\n        return await this.retryManager.withRetry(async () => {\n            this.logger.info(`📂 Migrating directory: ${directoryPath}`);\n            const startTime = new Date();\n            const s3 = this.connectionManager.getS3Connection();\n            const storacha = this.connectionManager.getStorachaConnection();\n            const fileKeys = await this.s3Service.listFilesInS3Directory(directoryPath);\n            if (fileKeys.length === 0) {\n                throw new Error(\"⚠️ No files found in directory\");\n            }\n            // Initialize progress with preparing phase\n            this.eventManager.updateProgress({\n                totalFiles: fileKeys.length,\n                completedFiles: 0,\n                percentage: 0,\n                phase: 'preparing',\n                status: 'preparing',\n                startTime,\n                currentFile: directoryPath,\n                remainingFiles: fileKeys.length,\n                totalBatches: Math.ceil(fileKeys.length / (this.migrationOptions?.batchSize || this.config.batch.size))\n            });\n            // Wait a moment for the UI to update\n            await new Promise(resolve => setTimeout(resolve, 100));\n            // Download phase\n            this.eventManager.updateProgress({\n                phase: 'download',\n                status: 'downloading'\n            });\n            await new Promise(resolve => setTimeout(resolve, 100));\n            const filesData = await this.s3Service.fetchFilesInBatches(fileKeys);\n            // Wait for download progress to be displayed\n            await new Promise(resolve => setTimeout(resolve, 500));\n            // Upload phase\n            this.eventManager.updateProgress({\n                phase: 'upload',\n                status: 'uploading'\n            });\n            await new Promise(resolve => setTimeout(resolve, 100));\n            const result = await storacha.uploadDirectoryToStoracha(filesData);\n            // Final update\n            const endTime = new Date();\n            this.eventManager.updateProgress({\n                completedFiles: fileKeys.length,\n                percentage: 100,\n                phase: 'preparing',\n                status: result.success ? 'completed' : 'error',\n                endTime,\n                remainingFiles: 0\n            });\n            return result;\n        }, `migrate directory ${directoryPath}`);\n    }\n    onProgress(callback) {\n        this.eventManager.onProgress(callback);\n    }\n    onError(callback) {\n        this.eventManager.onError(callback);\n    }\n    /**\n     * Creates a new Storacha space with a unique name\n     * @returns {Promise<SpaceResponse>}\n     */\n    async createSpace() {\n        return await this.retryManager.withRetry(async () => {\n            const spaceName = (0,_utils_nameGenerator_js__WEBPACK_IMPORTED_MODULE_4__.createUniqueName)();\n            this.logger.info(`🏗 Creating new space: ${spaceName}`);\n            const storacha = this.connectionManager.getStorachaConnection();\n            return await storacha.createNewStorachaSpace(spaceName);\n        }, \"create space\");\n    }\n    /**\n     * Sets the current space by DID\n     * @param {string} did - The DID of the space\n     * @returns {Promise<SpaceResponse>}\n     */\n    async setSpace(did) {\n        return await this.retryManager.withRetry(async () => {\n            this.logger.info(`🔄 Setting current space to: ${did}`);\n            const storacha = this.connectionManager.getStorachaConnection();\n            return await storacha.setCurrentSpaceByDID(did);\n        }, `set space ${did}`);\n    }\n    /**\n     * Generates a unique name for a new space\n     * @private\n     * @returns {string}\n     */\n    validateConfig(config) {\n        if (!config.s3?.region)\n            throw new Error('S3 region is required');\n        if (!config.retry?.maxAttempts)\n            throw new Error('Retry configuration is required');\n        if (!config.batch?.size)\n            config.batch = { size: 5, concurrency: 3 };\n        if (!config.batch?.concurrency)\n            config.batch.concurrency = 3;\n        return config;\n    }\n}\n//# sourceMappingURL=StorachaMigrator.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/../../dist/StorachaMigrator.js\n");

/***/ }),

/***/ "(api)/../../dist/index.js":
/*!***************************!*\
  !*** ../../dist/index.js ***!
  \***************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorachaMigrator: () => (/* reexport safe */ _StorachaMigrator_js__WEBPACK_IMPORTED_MODULE_0__.StorachaMigrator)\n/* harmony export */ });\n/* harmony import */ var _StorachaMigrator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StorachaMigrator.js */ \"(api)/../../dist/StorachaMigrator.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_StorachaMigrator_js__WEBPACK_IMPORTED_MODULE_0__]);\n_StorachaMigrator_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n//# sourceMappingURL=index.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5RDtBQUN6RCxpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0b3JhY2hhLW1pZ3JhdGlvbi11aS8uLi8uLi9kaXN0L2luZGV4LmpzPzhjMmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgU3RvcmFjaGFNaWdyYXRvciB9IGZyb20gJy4vU3RvcmFjaGFNaWdyYXRvci5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/../../dist/index.js\n");

/***/ }),

/***/ "(api)/../../dist/managers/ConnectionManager.js":
/*!************************************************!*\
  !*** ../../dist/managers/ConnectionManager.js ***!
  \************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectionManager: () => (/* binding */ ConnectionManager)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/client-s3 */ \"@aws-sdk/client-s3\");\n/* harmony import */ var _services_storachaService_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../services/storachaService.js */ \"(api)/../../dist/services/storachaService.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_services_storachaService_js__WEBPACK_IMPORTED_MODULE_1__]);\n_services_storachaService_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nclass ConnectionManager {\n    constructor(config) {\n        this.s3Connection = null;\n        this.storachaConnection = null;\n        this.config = config;\n    }\n    async initializeConnections() {\n        try {\n            this.s3Connection = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.S3Client({\n                region: this.config.s3.region,\n                credentials: this.config.s3.credentials,\n            });\n            if (!this.config.storacha.email) {\n                throw new Error(\"Storacha email is required\");\n            }\n            const client = new _services_storachaService_js__WEBPACK_IMPORTED_MODULE_1__.StorachaClient();\n            const validEmail = await client.validateEmail(this.config.storacha.email);\n            this.storachaConnection = await _services_storachaService_js__WEBPACK_IMPORTED_MODULE_1__.StorachaClient.connect({ email: validEmail });\n        }\n        catch (error) {\n            const message = error instanceof Error ? error.message : \"Unknown error\";\n            throw new Error(`Failed to initialize connections: ${message}`);\n        }\n    }\n    async closeConnections() {\n        try {\n            await this.storachaConnection?.disconnect();\n            this.s3Connection = null;\n            this.storachaConnection = null;\n        }\n        catch (error) {\n            const message = error instanceof Error ? error.message : \"Unknown error\";\n            throw new Error(`Failed to close connections: ${message}`);\n        }\n    }\n    getS3Connection() {\n        if (!this.s3Connection) {\n            throw new Error(\"S3 connection not initialized\");\n        }\n        return this.s3Connection;\n    }\n    getStorachaConnection() {\n        if (!this.storachaConnection) {\n            throw new Error(\"Storacha connection not initialized\");\n        }\n        return this.storachaConnection;\n    }\n}\n//# sourceMappingURL=ConnectionManager.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vZGlzdC9tYW5hZ2Vycy9Db25uZWN0aW9uTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBOEM7QUFDa0I7QUFDekQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyx3REFBUTtBQUM1QztBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLCtCQUErQix3RUFBYztBQUM3QztBQUNBLDRDQUE0Qyx3RUFBYyxXQUFXLG1CQUFtQjtBQUN4RjtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsUUFBUTtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxRQUFRO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RvcmFjaGEtbWlncmF0aW9uLXVpLy4uLy4uL2Rpc3QvbWFuYWdlcnMvQ29ubmVjdGlvbk1hbmFnZXIuanM/NDdiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTM0NsaWVudCB9IGZyb20gXCJAYXdzLXNkay9jbGllbnQtczNcIjtcbmltcG9ydCB7IFN0b3JhY2hhQ2xpZW50IH0gZnJvbSBcIi4uL3NlcnZpY2VzL3N0b3JhY2hhU2VydmljZS5qc1wiO1xuZXhwb3J0IGNsYXNzIENvbm5lY3Rpb25NYW5hZ2VyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgdGhpcy5zM0Nvbm5lY3Rpb24gPSBudWxsO1xuICAgICAgICB0aGlzLnN0b3JhY2hhQ29ubmVjdGlvbiA9IG51bGw7XG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICAgIH1cbiAgICBhc3luYyBpbml0aWFsaXplQ29ubmVjdGlvbnMoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB0aGlzLnMzQ29ubmVjdGlvbiA9IG5ldyBTM0NsaWVudCh7XG4gICAgICAgICAgICAgICAgcmVnaW9uOiB0aGlzLmNvbmZpZy5zMy5yZWdpb24sXG4gICAgICAgICAgICAgICAgY3JlZGVudGlhbHM6IHRoaXMuY29uZmlnLnMzLmNyZWRlbnRpYWxzLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoIXRoaXMuY29uZmlnLnN0b3JhY2hhLmVtYWlsKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3RvcmFjaGEgZW1haWwgaXMgcmVxdWlyZWRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjbGllbnQgPSBuZXcgU3RvcmFjaGFDbGllbnQoKTtcbiAgICAgICAgICAgIGNvbnN0IHZhbGlkRW1haWwgPSBhd2FpdCBjbGllbnQudmFsaWRhdGVFbWFpbCh0aGlzLmNvbmZpZy5zdG9yYWNoYS5lbWFpbCk7XG4gICAgICAgICAgICB0aGlzLnN0b3JhY2hhQ29ubmVjdGlvbiA9IGF3YWl0IFN0b3JhY2hhQ2xpZW50LmNvbm5lY3QoeyBlbWFpbDogdmFsaWRFbWFpbCB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFwiVW5rbm93biBlcnJvclwiO1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gaW5pdGlhbGl6ZSBjb25uZWN0aW9uczogJHttZXNzYWdlfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIGNsb3NlQ29ubmVjdGlvbnMoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnN0b3JhY2hhQ29ubmVjdGlvbj8uZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgdGhpcy5zM0Nvbm5lY3Rpb24gPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5zdG9yYWNoYUNvbm5lY3Rpb24gPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogXCJVbmtub3duIGVycm9yXCI7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBjbG9zZSBjb25uZWN0aW9uczogJHttZXNzYWdlfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldFMzQ29ubmVjdGlvbigpIHtcbiAgICAgICAgaWYgKCF0aGlzLnMzQ29ubmVjdGlvbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUzMgY29ubmVjdGlvbiBub3QgaW5pdGlhbGl6ZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuczNDb25uZWN0aW9uO1xuICAgIH1cbiAgICBnZXRTdG9yYWNoYUNvbm5lY3Rpb24oKSB7XG4gICAgICAgIGlmICghdGhpcy5zdG9yYWNoYUNvbm5lY3Rpb24pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlN0b3JhY2hhIGNvbm5lY3Rpb24gbm90IGluaXRpYWxpemVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnN0b3JhY2hhQ29ubmVjdGlvbjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25uZWN0aW9uTWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/../../dist/managers/ConnectionManager.js\n");

/***/ }),

/***/ "(api)/../../dist/managers/RetryManager.js":
/*!*******************************************!*\
  !*** ../../dist/managers/RetryManager.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RetryManager: () => (/* binding */ RetryManager)\n/* harmony export */ });\nclass RetryManager {\n    constructor(config, logger) {\n        this.config = config;\n        this.logger = logger;\n    }\n    async withRetry(operation, context) {\n        let lastError = new Error(\"No error details available\");\n        for (let attempt = 1; attempt <= this.config.maxAttempts; attempt++) {\n            try {\n                return await operation();\n            }\n            catch (error) {\n                const message = error instanceof Error ? error.message : \"Unknown error\";\n                lastError = new Error(message);\n                this.logger.warn(`Attempt ${attempt}/${this.config.maxAttempts} failed for ${context}: ${message}`);\n                if (attempt < this.config.maxAttempts) {\n                    const backoffTime = this.calculateBackoff(attempt);\n                    await this.delay(backoffTime);\n                    continue;\n                }\n            }\n        }\n        throw new Error(`Operation ${context} failed after ${this.config.maxAttempts} attempts: ${lastError.message}`);\n    }\n    calculateBackoff(attempt) {\n        return Math.min(this.config.backoffMs * Math.pow(2, attempt - 1), this.config.maxBackoffMs);\n    }\n    delay(ms) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n}\n//# sourceMappingURL=RetryManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vZGlzdC9tYW5hZ2Vycy9SZXRyeU1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG9DQUFvQztBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsUUFBUSxHQUFHLHlCQUF5QixhQUFhLFFBQVEsSUFBSSxRQUFRO0FBQ2pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLFNBQVMsZUFBZSx5QkFBeUIsWUFBWSxrQkFBa0I7QUFDcEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RvcmFjaGEtbWlncmF0aW9uLXVpLy4uLy4uL2Rpc3QvbWFuYWdlcnMvUmV0cnlNYW5hZ2VyLmpzPzMzOGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFJldHJ5TWFuYWdlciB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnLCBsb2dnZXIpIHtcbiAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICAgIH1cbiAgICBhc3luYyB3aXRoUmV0cnkob3BlcmF0aW9uLCBjb250ZXh0KSB7XG4gICAgICAgIGxldCBsYXN0RXJyb3IgPSBuZXcgRXJyb3IoXCJObyBlcnJvciBkZXRhaWxzIGF2YWlsYWJsZVwiKTtcbiAgICAgICAgZm9yIChsZXQgYXR0ZW1wdCA9IDE7IGF0dGVtcHQgPD0gdGhpcy5jb25maWcubWF4QXR0ZW1wdHM7IGF0dGVtcHQrKykge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgb3BlcmF0aW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBcIlVua25vd24gZXJyb3JcIjtcbiAgICAgICAgICAgICAgICBsYXN0RXJyb3IgPSBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIud2FybihgQXR0ZW1wdCAke2F0dGVtcHR9LyR7dGhpcy5jb25maWcubWF4QXR0ZW1wdHN9IGZhaWxlZCBmb3IgJHtjb250ZXh0fTogJHttZXNzYWdlfWApO1xuICAgICAgICAgICAgICAgIGlmIChhdHRlbXB0IDwgdGhpcy5jb25maWcubWF4QXR0ZW1wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYmFja29mZlRpbWUgPSB0aGlzLmNhbGN1bGF0ZUJhY2tvZmYoYXR0ZW1wdCk7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuZGVsYXkoYmFja29mZlRpbWUpO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBPcGVyYXRpb24gJHtjb250ZXh0fSBmYWlsZWQgYWZ0ZXIgJHt0aGlzLmNvbmZpZy5tYXhBdHRlbXB0c30gYXR0ZW1wdHM6ICR7bGFzdEVycm9yLm1lc3NhZ2V9YCk7XG4gICAgfVxuICAgIGNhbGN1bGF0ZUJhY2tvZmYoYXR0ZW1wdCkge1xuICAgICAgICByZXR1cm4gTWF0aC5taW4odGhpcy5jb25maWcuYmFja29mZk1zICogTWF0aC5wb3coMiwgYXR0ZW1wdCAtIDEpLCB0aGlzLmNvbmZpZy5tYXhCYWNrb2ZmTXMpO1xuICAgIH1cbiAgICBkZWxheShtcykge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZXRyeU1hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/../../dist/managers/RetryManager.js\n");

/***/ }),

/***/ "(api)/../../dist/services/s3Service.js":
/*!****************************************!*\
  !*** ../../dist/services/s3Service.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S3Service: () => (/* binding */ S3Service)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/client-s3 */ \"@aws-sdk/client-s3\");\n\nclass S3Service {\n    constructor(config, eventManager) {\n        this.config = config;\n        this.client = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.S3Client({\n            region: config.region,\n            credentials: config.credentials ?? {\n                accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n                secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n            },\n        });\n        this.eventManager = eventManager;\n    }\n    /**\n     * Fetches a file from S3 as a buffer\n     * @param {string} fileKey - The file key in S3\n     * @returns {Promise<FileData>}\n     */\n    async fetchFileFromS3(fileKey) {\n        const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.GetObjectCommand({\n            Bucket: this.config.bucketName,\n            Key: fileKey,\n        });\n        const response = await this.client.send(command);\n        const chunks = [];\n        const totalBytes = Number(response.ContentLength) || 0;\n        let bytesReceived = 0;\n        if (!response.Body) {\n            throw new Error(`No body in response for file: ${fileKey}`);\n        }\n        // Mark the start of download phase\n        this.eventManager?.updateProgress({ phase: 'download' });\n        for await (const chunk of response.Body) {\n            chunks.push(chunk);\n            bytesReceived += chunk.length;\n            this.eventManager?.updateFileProgress(fileKey, bytesReceived, totalBytes, 'download');\n        }\n        const buffer = Buffer.concat(chunks);\n        return {\n            buffer,\n            fileName: fileKey.split(\"/\").pop() || fileKey,\n        };\n    }\n    /**\n     * Lists all files in an S3 directory (prefix)\n     * @param {string} directoryPath - The S3 directory (prefix)\n     * @returns {Promise<string[]>} - Array of file keys\n     */\n    async listFilesInS3Directory(directoryPath) {\n        try {\n            console.log(`Listing files in S3 directory: ${directoryPath}`);\n            const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.ListObjectsV2Command({\n                Bucket: this.config.bucketName,\n                Prefix: directoryPath,\n            });\n            const data = await this.client.send(command);\n            return data.Contents\n                ? data.Contents.map((item) => item.Key)\n                : [];\n        }\n        catch (error) {\n            console.error(\"Error listing files in S3 directory:\", error);\n            throw error;\n        }\n    }\n    /**\n     * Fetches multiple files in batches\n     * @param {string[]} fileKeys - Array of file keys to fetch\n     * @returns {Promise<FileData[]>}\n     */\n    async fetchFilesInBatches(fileKeys) {\n        const batchSize = 5;\n        const results = [];\n        // Calculate total size first\n        let totalDownloadBytes = 0;\n        for (const key of fileKeys) {\n            const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.GetObjectCommand({\n                Bucket: this.config.bucketName,\n                Key: key,\n            });\n            const response = await this.client.send(command);\n            totalDownloadBytes += Number(response.ContentLength) || 0;\n        }\n        // Set initial total bytes for download phase\n        this.eventManager?.setTotalBytes(totalDownloadBytes, totalDownloadBytes);\n        for (let i = 0; i < fileKeys.length; i += batchSize) {\n            const batch = fileKeys.slice(i, i + batchSize);\n            this.eventManager?.updateProgress({\n                phase: 'download',\n                currentFile: `Batch ${Math.floor(i / batchSize) + 1}/${Math.ceil(fileKeys.length / batchSize)}`\n            });\n            const batchResults = await Promise.all(batch.map(key => this.fetchFileFromS3(key)));\n            results.push(...batchResults);\n        }\n        return results;\n    }\n}\n//# sourceMappingURL=s3Service.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vZGlzdC9zZXJ2aWNlcy9zM1NlcnZpY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUY7QUFDaEY7QUFDUDtBQUNBO0FBQ0EsMEJBQTBCLHdEQUFRO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBLDRCQUE0QixnRUFBZ0I7QUFDNUM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELFFBQVE7QUFDckU7QUFDQTtBQUNBLDRDQUE0QyxtQkFBbUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsaUJBQWlCLG1CQUFtQjtBQUNwQztBQUNBO0FBQ0E7QUFDQSwwREFBMEQsY0FBYztBQUN4RSxnQ0FBZ0Msb0VBQW9CO0FBQ3BEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxVQUFVO0FBQ3pCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxnRUFBZ0I7QUFDaEQ7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFCQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsOEJBQThCLEdBQUcsdUNBQXVDO0FBQzlHLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0b3JhY2hhLW1pZ3JhdGlvbi11aS8uLi8uLi9kaXN0L3NlcnZpY2VzL3MzU2VydmljZS5qcz80ZjBkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFMzQ2xpZW50LCBHZXRPYmplY3RDb21tYW5kLCBMaXN0T2JqZWN0c1YyQ29tbWFuZCwgfSBmcm9tIFwiQGF3cy1zZGsvY2xpZW50LXMzXCI7XG5leHBvcnQgY2xhc3MgUzNTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcsIGV2ZW50TWFuYWdlcikge1xuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICAgICAgdGhpcy5jbGllbnQgPSBuZXcgUzNDbGllbnQoe1xuICAgICAgICAgICAgcmVnaW9uOiBjb25maWcucmVnaW9uLFxuICAgICAgICAgICAgY3JlZGVudGlhbHM6IGNvbmZpZy5jcmVkZW50aWFscyA/PyB7XG4gICAgICAgICAgICAgICAgYWNjZXNzS2V5SWQ6IHByb2Nlc3MuZW52LkFXU19BQ0NFU1NfS0VZX0lELFxuICAgICAgICAgICAgICAgIHNlY3JldEFjY2Vzc0tleTogcHJvY2Vzcy5lbnYuQVdTX1NFQ1JFVF9BQ0NFU1NfS0VZLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZXZlbnRNYW5hZ2VyID0gZXZlbnRNYW5hZ2VyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGZXRjaGVzIGEgZmlsZSBmcm9tIFMzIGFzIGEgYnVmZmVyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGZpbGVLZXkgLSBUaGUgZmlsZSBrZXkgaW4gUzNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxGaWxlRGF0YT59XG4gICAgICovXG4gICAgYXN5bmMgZmV0Y2hGaWxlRnJvbVMzKGZpbGVLZXkpIHtcbiAgICAgICAgY29uc3QgY29tbWFuZCA9IG5ldyBHZXRPYmplY3RDb21tYW5kKHtcbiAgICAgICAgICAgIEJ1Y2tldDogdGhpcy5jb25maWcuYnVja2V0TmFtZSxcbiAgICAgICAgICAgIEtleTogZmlsZUtleSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5jbGllbnQuc2VuZChjb21tYW5kKTtcbiAgICAgICAgY29uc3QgY2h1bmtzID0gW107XG4gICAgICAgIGNvbnN0IHRvdGFsQnl0ZXMgPSBOdW1iZXIocmVzcG9uc2UuQ29udGVudExlbmd0aCkgfHwgMDtcbiAgICAgICAgbGV0IGJ5dGVzUmVjZWl2ZWQgPSAwO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLkJvZHkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gYm9keSBpbiByZXNwb25zZSBmb3IgZmlsZTogJHtmaWxlS2V5fWApO1xuICAgICAgICB9XG4gICAgICAgIC8vIE1hcmsgdGhlIHN0YXJ0IG9mIGRvd25sb2FkIHBoYXNlXG4gICAgICAgIHRoaXMuZXZlbnRNYW5hZ2VyPy51cGRhdGVQcm9ncmVzcyh7IHBoYXNlOiAnZG93bmxvYWQnIH0pO1xuICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIHJlc3BvbnNlLkJvZHkpIHtcbiAgICAgICAgICAgIGNodW5rcy5wdXNoKGNodW5rKTtcbiAgICAgICAgICAgIGJ5dGVzUmVjZWl2ZWQgKz0gY2h1bmsubGVuZ3RoO1xuICAgICAgICAgICAgdGhpcy5ldmVudE1hbmFnZXI/LnVwZGF0ZUZpbGVQcm9ncmVzcyhmaWxlS2V5LCBieXRlc1JlY2VpdmVkLCB0b3RhbEJ5dGVzLCAnZG93bmxvYWQnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuY29uY2F0KGNodW5rcyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBidWZmZXIsXG4gICAgICAgICAgICBmaWxlTmFtZTogZmlsZUtleS5zcGxpdChcIi9cIikucG9wKCkgfHwgZmlsZUtleSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdHMgYWxsIGZpbGVzIGluIGFuIFMzIGRpcmVjdG9yeSAocHJlZml4KVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkaXJlY3RvcnlQYXRoIC0gVGhlIFMzIGRpcmVjdG9yeSAocHJlZml4KVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZ1tdPn0gLSBBcnJheSBvZiBmaWxlIGtleXNcbiAgICAgKi9cbiAgICBhc3luYyBsaXN0RmlsZXNJblMzRGlyZWN0b3J5KGRpcmVjdG9yeVBhdGgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBMaXN0aW5nIGZpbGVzIGluIFMzIGRpcmVjdG9yeTogJHtkaXJlY3RvcnlQYXRofWApO1xuICAgICAgICAgICAgY29uc3QgY29tbWFuZCA9IG5ldyBMaXN0T2JqZWN0c1YyQ29tbWFuZCh7XG4gICAgICAgICAgICAgICAgQnVja2V0OiB0aGlzLmNvbmZpZy5idWNrZXROYW1lLFxuICAgICAgICAgICAgICAgIFByZWZpeDogZGlyZWN0b3J5UGF0aCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuY2xpZW50LnNlbmQoY29tbWFuZCk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YS5Db250ZW50c1xuICAgICAgICAgICAgICAgID8gZGF0YS5Db250ZW50cy5tYXAoKGl0ZW0pID0+IGl0ZW0uS2V5KVxuICAgICAgICAgICAgICAgIDogW107XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgbGlzdGluZyBmaWxlcyBpbiBTMyBkaXJlY3Rvcnk6XCIsIGVycm9yKTtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZldGNoZXMgbXVsdGlwbGUgZmlsZXMgaW4gYmF0Y2hlc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nW119IGZpbGVLZXlzIC0gQXJyYXkgb2YgZmlsZSBrZXlzIHRvIGZldGNoXG4gICAgICogQHJldHVybnMge1Byb21pc2U8RmlsZURhdGFbXT59XG4gICAgICovXG4gICAgYXN5bmMgZmV0Y2hGaWxlc0luQmF0Y2hlcyhmaWxlS2V5cykge1xuICAgICAgICBjb25zdCBiYXRjaFNpemUgPSA1O1xuICAgICAgICBjb25zdCByZXN1bHRzID0gW107XG4gICAgICAgIC8vIENhbGN1bGF0ZSB0b3RhbCBzaXplIGZpcnN0XG4gICAgICAgIGxldCB0b3RhbERvd25sb2FkQnl0ZXMgPSAwO1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBmaWxlS2V5cykge1xuICAgICAgICAgICAgY29uc3QgY29tbWFuZCA9IG5ldyBHZXRPYmplY3RDb21tYW5kKHtcbiAgICAgICAgICAgICAgICBCdWNrZXQ6IHRoaXMuY29uZmlnLmJ1Y2tldE5hbWUsXG4gICAgICAgICAgICAgICAgS2V5OiBrZXksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5jbGllbnQuc2VuZChjb21tYW5kKTtcbiAgICAgICAgICAgIHRvdGFsRG93bmxvYWRCeXRlcyArPSBOdW1iZXIocmVzcG9uc2UuQ29udGVudExlbmd0aCkgfHwgMDtcbiAgICAgICAgfVxuICAgICAgICAvLyBTZXQgaW5pdGlhbCB0b3RhbCBieXRlcyBmb3IgZG93bmxvYWQgcGhhc2VcbiAgICAgICAgdGhpcy5ldmVudE1hbmFnZXI/LnNldFRvdGFsQnl0ZXModG90YWxEb3dubG9hZEJ5dGVzLCB0b3RhbERvd25sb2FkQnl0ZXMpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpbGVLZXlzLmxlbmd0aDsgaSArPSBiYXRjaFNpemUpIHtcbiAgICAgICAgICAgIGNvbnN0IGJhdGNoID0gZmlsZUtleXMuc2xpY2UoaSwgaSArIGJhdGNoU2l6ZSk7XG4gICAgICAgICAgICB0aGlzLmV2ZW50TWFuYWdlcj8udXBkYXRlUHJvZ3Jlc3Moe1xuICAgICAgICAgICAgICAgIHBoYXNlOiAnZG93bmxvYWQnLFxuICAgICAgICAgICAgICAgIGN1cnJlbnRGaWxlOiBgQmF0Y2ggJHtNYXRoLmZsb29yKGkgLyBiYXRjaFNpemUpICsgMX0vJHtNYXRoLmNlaWwoZmlsZUtleXMubGVuZ3RoIC8gYmF0Y2hTaXplKX1gXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IGJhdGNoUmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsKGJhdGNoLm1hcChrZXkgPT4gdGhpcy5mZXRjaEZpbGVGcm9tUzMoa2V5KSkpO1xuICAgICAgICAgICAgcmVzdWx0cy5wdXNoKC4uLmJhdGNoUmVzdWx0cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9czNTZXJ2aWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/../../dist/services/s3Service.js\n");

/***/ }),

/***/ "(api)/../../dist/services/storachaService.js":
/*!**********************************************!*\
  !*** ../../dist/services/storachaService.js ***!
  \**********************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorachaClient: () => (/* binding */ StorachaClient)\n/* harmony export */ });\n/* harmony import */ var _web3_storage_w3up_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-storage/w3up-client */ \"@web3-storage/w3up-client\");\n/* harmony import */ var _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/upload-client */ \"@web3-storage/upload-client\");\n/* harmony import */ var _web3_storage_upload_client_fetch_with_upload_progress__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-storage/upload-client/fetch-with-upload-progress */ \"@web3-storage/upload-client/fetch-with-upload-progress\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dotenv */ \"dotenv\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_web3_storage_w3up_client__WEBPACK_IMPORTED_MODULE_0__, _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_1__, _web3_storage_upload_client_fetch_with_upload_progress__WEBPACK_IMPORTED_MODULE_2__]);\n([_web3_storage_w3up_client__WEBPACK_IMPORTED_MODULE_0__, _web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_1__, _web3_storage_upload_client_fetch_with_upload_progress__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\ndotenv__WEBPACK_IMPORTED_MODULE_3__.config();\nclass StorachaClient {\n    constructor(eventManager) {\n        this.isUploading = false;\n        this.eventManager = eventManager;\n    }\n    async initialize() {\n        if (!this.client) {\n            this.client = await (0,_web3_storage_w3up_client__WEBPACK_IMPORTED_MODULE_0__.create)();\n        }\n    }\n    async validateEmail(email) {\n        if (!email || !email.includes(\"@\")) {\n            throw new Error(\"Invalid email format. Email must be in the format user@domain\");\n        }\n        return email;\n    }\n    async initializeClient() {\n        try {\n            console.log(\"🛠 Initializing Storacha client...\");\n            const client = await (0,_web3_storage_w3up_client__WEBPACK_IMPORTED_MODULE_0__.create)();\n            console.log(\"🔑 Logging in to Storacha...\");\n            const email = process.env.STORACHA_EMAIL;\n            if (!email) {\n                throw new Error(\"STORACHA_EMAIL environment variable is not set\");\n            }\n            const validEmail = await this.validateEmail(email);\n            const account = await client.login(validEmail);\n            console.log(`✅ Logged into Storacha with email: ${email}`);\n            return {\n                client: client,\n                account: account,\n            };\n        }\n        catch (error) {\n            console.error(\"❌ Error initializing client:\", error);\n            throw error;\n        }\n    }\n    async waitForPlanActivation(account) {\n        try {\n            console.log(\"⏳ Waiting for payment plan activation...\");\n            await account.plan.wait();\n            console.log(\"✅ Payment plan confirmed.\");\n        }\n        catch (error) {\n            console.error(\"❌ Error waiting for plan activation:\", error);\n            throw error;\n        }\n    }\n    async uploadToStoracha(fileBuffer, fileName) {\n        try {\n            const { client, account } = await this.initializeClient();\n            await this.waitForPlanActivation(account);\n            console.log(\"🔍 Fetching user's current space...\");\n            const res = await account.agent.getSpaceInfo();\n            if (!res || !res.did) {\n                throw new Error(\"❌ No space found! Please create a new space first.\");\n            }\n            const space = res;\n            await client.setCurrentSpace(space.did);\n            console.log(`✅ Using existing space: ${space.did}`);\n            const conf = {\n                issuer: client.agent.issuer,\n                with: space.did,\n                proofs: client.proofs(),\n            };\n            const file = new File([fileBuffer], fileName);\n            console.log(`📤 Uploading file: ${fileName}...`);\n            const cid = await (0,_web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_1__.uploadFile)(conf, file, {\n                onUploadProgress: (progress) => {\n                    this.eventManager?.updateUploadProgress({\n                        ...progress,\n                        phase: 'upload'\n                    });\n                },\n                fetchWithUploadProgress: _web3_storage_upload_client_fetch_with_upload_progress__WEBPACK_IMPORTED_MODULE_2__.fetchWithUploadProgress // Enable XHR-based progress tracking\n            });\n            console.log(`✅ File uploaded successfully! CID: ${cid.toString()}`);\n            return {\n                success: true,\n                cid: cid.toString(),\n                url: `https://${cid.toString()}.ipfs.w3s.link`,\n                size: fileBuffer.length,\n                status: \"success\",\n            };\n        }\n        catch (error) {\n            console.error(\"❌ Error uploading file to Storacha:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\",\n                status: \"failed\",\n            };\n        }\n    }\n    async uploadDirectoryToStoracha(filesArray) {\n        if (this.isUploading) {\n            return {\n                success: false,\n                error: \"Upload already in progress\",\n                status: \"failed\"\n            };\n        }\n        this.isUploading = true;\n        try {\n            // Step 1: Initialize and authenticate (without progress updates)\n            await this.initialize();\n            const { client, account } = await this.initializeClient();\n            await this.waitForPlanActivation(account);\n            console.log(\"🔍 Fetching user's current space...\");\n            const res = await account.agent.getSpaceInfo();\n            if (!res || !res.did) {\n                throw new Error(\"❌ No space found! Please create a new space first.\");\n            }\n            const space = res;\n            await client.setCurrentSpace(space.did);\n            console.log(`✅ Using existing space: ${space.did}`);\n            // Step 2: Prepare files and configuration\n            const files = filesArray.map(({ buffer, fileName }) => new File([buffer], fileName));\n            const conf = {\n                issuer: client.agent.issuer,\n                with: space.did,\n                proofs: client.agent.proofs(),\n            };\n            // Calculate total upload size\n            const totalUploadBytes = filesArray.reduce((acc, file) => acc + file.buffer.length, 0);\n            let totalBytesUploaded = 0;\n            let lastBytesUploaded = 0;\n            console.log(`📂 Uploading ${files.length} files as a directory (Total size: ${this.formatBytes(totalUploadBytes)})...`);\n            // Step 3: Initialize upload progress\n            this.eventManager?.updateProgress({\n                phase: 'upload',\n                uploadedBytes: 0,\n                totalUploadBytes,\n                currentFile: 'Starting directory upload...',\n                totalFiles: files.length,\n                completedFiles: 0,\n                percentage: 0,\n                uploadSpeed: 0\n            });\n            // Step 4: Start upload with progress tracking\n            let lastProgressUpdate = Date.now();\n            let uploadStartTime = Date.now();\n            let lastSpeedUpdate = Date.now();\n            let uploadSpeed = 0;\n            const directoryCid = await (0,_web3_storage_upload_client__WEBPACK_IMPORTED_MODULE_1__.uploadDirectory)(conf, files, {\n                onUploadProgress: (progress) => {\n                    const now = Date.now();\n                    if (now - lastProgressUpdate > 100) { // Throttle updates to every 100ms\n                        // Calculate actual bytes uploaded\n                        const currentBytesUploaded = progress.loaded || 0;\n                        if (currentBytesUploaded > lastBytesUploaded) {\n                            totalBytesUploaded += (currentBytesUploaded - lastBytesUploaded);\n                            lastBytesUploaded = currentBytesUploaded;\n                        }\n                        // Calculate upload speed every second\n                        if (now - lastSpeedUpdate > 1000) {\n                            const elapsedSeconds = (now - uploadStartTime) / 1000;\n                            const bytesPerSecond = totalBytesUploaded / elapsedSeconds;\n                            uploadSpeed = bytesPerSecond;\n                            lastSpeedUpdate = now;\n                        }\n                        const percentage = (totalBytesUploaded / totalUploadBytes) * 100;\n                        console.log(`Debug: Upload progress - ${this.formatBytes(totalBytesUploaded)}/${this.formatBytes(totalUploadBytes)} (${percentage.toFixed(1)}%) at ${this.formatBytes(uploadSpeed)}/s`);\n                        this.eventManager?.updateProgress({\n                            phase: 'upload',\n                            uploadedBytes: totalBytesUploaded,\n                            totalUploadBytes,\n                            percentage,\n                            uploadSpeed,\n                            currentFile: `Uploading directory (${this.formatBytes(totalBytesUploaded)}/${this.formatBytes(totalUploadBytes)})`\n                        });\n                        lastProgressUpdate = now;\n                    }\n                },\n                onShardStored: (meta) => {\n                    if (meta && typeof meta.shardIndex === 'number' && typeof meta.totalShards === 'number') {\n                        const shardSize = totalUploadBytes / meta.totalShards;\n                        const uploadedBytes = Math.min((meta.shardIndex + 1) * shardSize, totalUploadBytes);\n                        const percentage = (uploadedBytes / totalUploadBytes) * 100;\n                        console.log(`Debug: Shard ${meta.shardIndex + 1}/${meta.totalShards} stored (${percentage.toFixed(1)}%)`);\n                        this.eventManager?.updateProgress({\n                            phase: 'upload',\n                            uploadedBytes,\n                            totalUploadBytes,\n                            percentage,\n                            uploadSpeed,\n                            currentShardIndex: meta.shardIndex,\n                            totalShards: meta.totalShards,\n                            currentFile: `Processing shard ${meta.shardIndex + 1}/${meta.totalShards}`\n                        });\n                        // Update total bytes uploaded if shard tracking shows more progress\n                        if (uploadedBytes > totalBytesUploaded) {\n                            totalBytesUploaded = uploadedBytes;\n                            lastBytesUploaded = uploadedBytes;\n                        }\n                    }\n                },\n                fetchWithUploadProgress: _web3_storage_upload_client_fetch_with_upload_progress__WEBPACK_IMPORTED_MODULE_2__.fetchWithUploadProgress\n            });\n            // Step 5: Show completion\n            const uploadDuration = (Date.now() - uploadStartTime) / 1000;\n            const averageUploadSpeed = uploadDuration > 0 ? totalUploadBytes / uploadDuration : 0;\n            this.eventManager?.updateProgress({\n                phase: 'upload',\n                status: 'completed',\n                uploadedBytes: totalUploadBytes,\n                totalUploadBytes,\n                percentage: 100,\n                uploadSpeed: averageUploadSpeed,\n                currentFile: 'Upload complete!',\n                completedFiles: files.length\n            });\n            console.log(`✅ Directory uploaded successfully! CID: ${directoryCid}`);\n            return {\n                success: true,\n                cid: directoryCid.toString(),\n                url: `https://${directoryCid}.ipfs.w3s.link`,\n                size: totalUploadBytes,\n                status: \"success\",\n            };\n        }\n        catch (error) {\n            console.error(\"❌ Error uploading directory to Storacha:\", error);\n            this.eventManager?.updateProgress({\n                phase: 'upload',\n                currentFile: 'Upload failed!',\n                errors: [{ file: 'directory', error: error }]\n            });\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\",\n                status: \"failed\",\n            };\n        }\n        finally {\n            this.isUploading = false;\n        }\n    }\n    // Helper function for formatting bytes\n    formatBytes(bytes) {\n        if (bytes === 0)\n            return '0 B';\n        const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(1024));\n        return `${(bytes / Math.pow(1024, i)).toFixed(2)} ${sizes[i]}`;\n    }\n    async createNewStorachaSpace(spaceName) {\n        try {\n            console.log(`🚀 Creating new Storacha space: ${spaceName}...`);\n            const { client, account } = await this.initializeClient();\n            await this.waitForPlanActivation(account);\n            const space = (await client.createSpace(spaceName, {\n                account,\n            }));\n            const did = space.did();\n            await client.setCurrentSpace(did);\n            console.log(`✅ New space created and set as current: ${spaceName} (DID: ${did})`);\n            return {\n                success: true,\n                did,\n                name: spaceName,\n            };\n        }\n        catch (error) {\n            console.error(\"❌ Error creating new Storacha space:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\",\n            };\n        }\n    }\n    static async connect(config) {\n        const client = new StorachaClient();\n        await client.initialize();\n        await client.login(config.email);\n        return client;\n    }\n    async disconnect() {\n        this.client = null;\n        this.account = null;\n    }\n    async setCurrentSpaceByDID(did) {\n        try {\n            console.log(`🔄 Setting current space to DID: ${did}...`);\n            const { account, client } = await this.initializeClient();\n            const res = await account.agent.getSpaceInfo();\n            console.log(`📍 Current Space: ${res.did}`);\n            await client.setCurrentSpace(did);\n            console.log(`✅ Successfully set current space to: ${did}`);\n            return {\n                success: true,\n                did,\n                name: did.split(\":\").pop() || \"\",\n            };\n        }\n        catch (error) {\n            console.error(\"❌ Error setting current space by DID:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\",\n            };\n        }\n    }\n    async login(email) {\n        try {\n            this.account = await this.client.login(email);\n        }\n        catch (error) {\n            throw new Error(`Failed to login to Storacha: ${error}`);\n        }\n    }\n    async uploadFilesInBatches(files) {\n        const batchSize = 5;\n        for (let i = 0; i < files.length; i += batchSize) {\n            const batch = files.slice(i, i + batchSize);\n            this.eventManager?.updateProgress({\n                phase: 'upload',\n                currentFile: `Batch ${Math.floor(i / batchSize) + 1}/${Math.ceil(files.length / batchSize)}`\n            });\n            await Promise.all(batch.map(file => this.uploadToStoracha(file.buffer, file.fileName)));\n        }\n    }\n}\n//# sourceMappingURL=storachaService.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/../../dist/services/storachaService.js\n");

/***/ }),

/***/ "(api)/../../dist/utils/DefaultLogger.js":
/*!*****************************************!*\
  !*** ../../dist/utils/DefaultLogger.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultLogger: () => (/* binding */ DefaultLogger)\n/* harmony export */ });\nclass DefaultLogger {\n    info(message, ...args) {\n        console.log(`[INFO] ${message}`, ...args);\n    }\n    error(message, error, ...args) {\n        console.error(`[ERROR] ${message}`, error?.message || '', ...args);\n    }\n    warn(message, ...args) {\n        console.warn(`[WARN] ${message}`, ...args);\n    }\n    debug(message, ...args) {\n        console.debug(`[DEBUG] ${message}`, ...args);\n    }\n}\n//# sourceMappingURL=DefaultLogger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vZGlzdC91dGlscy9EZWZhdWx0TG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0EsOEJBQThCLFFBQVE7QUFDdEM7QUFDQTtBQUNBLGlDQUFpQyxRQUFRO0FBQ3pDO0FBQ0E7QUFDQSwrQkFBK0IsUUFBUTtBQUN2QztBQUNBO0FBQ0EsaUNBQWlDLFFBQVE7QUFDekM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RvcmFjaGEtbWlncmF0aW9uLXVpLy4uLy4uL2Rpc3QvdXRpbHMvRGVmYXVsdExvZ2dlci5qcz9iZTE2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBEZWZhdWx0TG9nZ2VyIHtcbiAgICBpbmZvKG1lc3NhZ2UsIC4uLmFyZ3MpIHtcbiAgICAgICAgY29uc29sZS5sb2coYFtJTkZPXSAke21lc3NhZ2V9YCwgLi4uYXJncyk7XG4gICAgfVxuICAgIGVycm9yKG1lc3NhZ2UsIGVycm9yLCAuLi5hcmdzKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYFtFUlJPUl0gJHttZXNzYWdlfWAsIGVycm9yPy5tZXNzYWdlIHx8ICcnLCAuLi5hcmdzKTtcbiAgICB9XG4gICAgd2FybihtZXNzYWdlLCAuLi5hcmdzKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihgW1dBUk5dICR7bWVzc2FnZX1gLCAuLi5hcmdzKTtcbiAgICB9XG4gICAgZGVidWcobWVzc2FnZSwgLi4uYXJncykge1xuICAgICAgICBjb25zb2xlLmRlYnVnKGBbREVCVUddICR7bWVzc2FnZX1gLCAuLi5hcmdzKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EZWZhdWx0TG9nZ2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/../../dist/utils/DefaultLogger.js\n");

/***/ }),

/***/ "(api)/../../dist/utils/nameGenerator.js":
/*!*****************************************!*\
  !*** ../../dist/utils/nameGenerator.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUniqueName: () => (/* binding */ createUniqueName)\n/* harmony export */ });\nconst baseNames = [\n    'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon',\n    'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa',\n    'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron',\n    'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon',\n    'Phi', 'Chi', 'Psi', 'Omega'\n];\nconst usedNames = new Set();\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\nfunction generateRandomName() {\n    const randomIndex = getRandomInt(baseNames.length);\n    const randomName = `${baseNames[randomIndex]}-${Date.now()}`;\n    return randomName;\n}\nfunction createUniqueName() {\n    let name = generateRandomName();\n    while (usedNames.has(name)) {\n        name = generateRandomName();\n    }\n    usedNames.add(name);\n    return name;\n}\n//# sourceMappingURL=nameGenerator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vZGlzdC91dGlscy9uYW1lR2VuZXJhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix1QkFBdUIsR0FBRyxXQUFXO0FBQy9EO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdG9yYWNoYS1taWdyYXRpb24tdWkvLi4vLi4vZGlzdC91dGlscy9uYW1lR2VuZXJhdG9yLmpzPzRjMjkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmFzZU5hbWVzID0gW1xuICAgICdBbHBoYScsICdCZXRhJywgJ0dhbW1hJywgJ0RlbHRhJywgJ0Vwc2lsb24nLFxuICAgICdaZXRhJywgJ0V0YScsICdUaGV0YScsICdJb3RhJywgJ0thcHBhJyxcbiAgICAnTGFtYmRhJywgJ011JywgJ051JywgJ1hpJywgJ09taWNyb24nLFxuICAgICdQaScsICdSaG8nLCAnU2lnbWEnLCAnVGF1JywgJ1Vwc2lsb24nLFxuICAgICdQaGknLCAnQ2hpJywgJ1BzaScsICdPbWVnYSdcbl07XG5jb25zdCB1c2VkTmFtZXMgPSBuZXcgU2V0KCk7XG5mdW5jdGlvbiBnZXRSYW5kb21JbnQobWF4KSB7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG1heCk7XG59XG5mdW5jdGlvbiBnZW5lcmF0ZVJhbmRvbU5hbWUoKSB7XG4gICAgY29uc3QgcmFuZG9tSW5kZXggPSBnZXRSYW5kb21JbnQoYmFzZU5hbWVzLmxlbmd0aCk7XG4gICAgY29uc3QgcmFuZG9tTmFtZSA9IGAke2Jhc2VOYW1lc1tyYW5kb21JbmRleF19LSR7RGF0ZS5ub3coKX1gO1xuICAgIHJldHVybiByYW5kb21OYW1lO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVVuaXF1ZU5hbWUoKSB7XG4gICAgbGV0IG5hbWUgPSBnZW5lcmF0ZVJhbmRvbU5hbWUoKTtcbiAgICB3aGlsZSAodXNlZE5hbWVzLmhhcyhuYW1lKSkge1xuICAgICAgICBuYW1lID0gZ2VuZXJhdGVSYW5kb21OYW1lKCk7XG4gICAgfVxuICAgIHVzZWROYW1lcy5hZGQobmFtZSk7XG4gICAgcmV0dXJuIG5hbWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uYW1lR2VuZXJhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/../../dist/utils/nameGenerator.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmigrate&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cmigrate.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();